--- /home/nicholas/git/TacoFountain/work/unpatched/net/minecraft/server/MinecraftServer.java
+++ /home/nicholas/git/TacoFountain/patched/net/minecraft/server/MinecraftServer.java
@@ -1,10 +1,9 @@
 package net.minecraft.server;
 
 import com.google.common.base.Charsets;
 import com.google.common.collect.Lists;
-import com.google.common.collect.Queues;
 import com.google.common.util.concurrent.Futures;
 import com.google.common.util.concurrent.ListenableFuture;
 import com.google.common.util.concurrent.ListenableFutureTask;
 import com.mojang.authlib.GameProfile;
 import com.mojang.authlib.GameProfileRepository;
@@ -25,30 +24,30 @@
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collections;
 import java.util.Date;
-import java.util.Iterator;
 import java.util.List;
 import java.util.Queue;
 import java.util.Random;
 import java.util.UUID;
 import java.util.concurrent.Callable;
 import java.util.concurrent.Executors;
 import java.util.concurrent.FutureTask;
+import javax.annotation.Nonnull;
 import javax.annotation.Nullable;
 import javax.imageio.ImageIO;
 import org.apache.commons.lang3.Validate;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 // CraftBukkit start
 import jline.console.ConsoleReader;
 import joptsimple.OptionSet;
-import org.bukkit.Bukkit;
-import org.bukkit.craftbukkit.CraftServer;
+
 import org.bukkit.craftbukkit.Main;
 // CraftBukkit end
+import org.fountainmc.taco.TacoFountainServer;
 import org.spigotmc.SlackActivityAccountant; // Spigot
 import co.aikar.timings.MinecraftTimings; // Paper
 
 public abstract class MinecraftServer implements Runnable, ICommandListener, IAsyncTaskHandler, IMojangStatistics {
 
@@ -122,10 +121,15 @@
     // CraftBukkit end
     // Spigot start
     public final SlackActivityAccountant slackActivityAccountant = new SlackActivityAccountant();
     // Spigot end
 
+    // Fountain start
+    @Nonnull
+    public abstract TacoFountainServer getFountainServer();
+    // Fountain end
+
     public MinecraftServer(OptionSet options, Proxy proxy, DataConverterManager dataconvertermanager, YggdrasilAuthenticationService yggdrasilauthenticationservice, MinecraftSessionService minecraftsessionservice, GameProfileRepository gameprofilerepository, UserCache usercache) {
         SERVER = this; // Paper - better singleton
         io.netty.util.ResourceLeakDetector.setEnabled( false ); // Spigot - disable
         this.e = proxy;
         this.V = yggdrasilauthenticationservice;
@@ -348,10 +352,11 @@
             collideTeam.setCanSeeFriendlyInvisibles(false); // Because we want to mimic them not being on a team at all
         }
         // Paper end
     }
 
+
     protected void l() {
         boolean flag = true;
         boolean flag1 = true;
         boolean flag2 = true;
         boolean flag3 = true;
@@ -1230,10 +1235,11 @@
 
     public int P() {
         return this.u;
     }
 
+    public final int getPort() { return this.u; } // Fountain - OBFHELPER
     public void setPort(int i) {
         this.u = i;
     }
 
     public String Q() {
